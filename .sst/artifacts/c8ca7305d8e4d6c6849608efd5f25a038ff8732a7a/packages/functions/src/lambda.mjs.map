{
  "version": 3,
  "sources": ["../../../../../../node_modules/.pnpm/sst@2.36.1/node_modules/sst/context/context2.js", "../../../../../../node_modules/.pnpm/sst@2.36.1/node_modules/sst/context/handler.js", "../../../../../../node_modules/.pnpm/sst@2.36.1/node_modules/sst/node/api/index.js", "../../../../../../packages/functions/src/lambda.ts"],
  "sourcesContent": ["import { AsyncLocalStorage } from \"async_hooks\";\nexport class ContextNotFoundError extends Error {\n    name;\n    constructor(name) {\n        super(`${name} context was not provided. It is possible you have multiple versions of SST installed.`);\n        this.name = name;\n    }\n}\nlet count = 0;\nexport function create(name) {\n    const storage = new AsyncLocalStorage();\n    const children = [];\n    // notify all memos to reset\n    function reset() {\n        for (const child of children) {\n            child();\n        }\n    }\n    const ctx = {\n        name,\n        with(value, cb) {\n            const version = (++count).toString();\n            return storage.run({ value, version }, () => {\n                return runWithCleanup(cb, () => reset());\n            });\n        },\n        use() {\n            const memo = ContextMemo.getStore();\n            // use is being called within a memo, so track dependency\n            if (memo) {\n                memo.deps.push(ctx);\n                children.push(memo.reset);\n            }\n            const result = storage.getStore();\n            if (result === undefined)\n                throw new ContextNotFoundError(name);\n            return result.value;\n        },\n        version() {\n            const result = storage.getStore();\n            if (result === undefined)\n                throw new ContextNotFoundError(name);\n            return result.version;\n        },\n    };\n    return ctx;\n}\nconst ContextMemo = new AsyncLocalStorage();\nexport function memo(cb) {\n    const deps = [];\n    const cache = new Map();\n    const children = [];\n    let tracked = false;\n    function key() {\n        return deps.map((dep) => dep.version()).join(\",\");\n    }\n    function reset() {\n        cache.delete(key());\n        for (const child of children) {\n            child();\n        }\n    }\n    function save(value) {\n        cache.set(key(), value);\n    }\n    return () => {\n        const child = ContextMemo.getStore();\n        if (child) {\n            child.deps.push({ version: () => key() });\n            children.push(child.reset);\n        }\n        // Memo never run so build up dependency list\n        if (!tracked) {\n            return ContextMemo.run({ deps, reset }, () => {\n                return runWithCleanup(cb, (result) => {\n                    tracked = true;\n                    save(result);\n                });\n            });\n        }\n        const cached = cache.get(key());\n        if (cached) {\n            return cached;\n        }\n        const result = cb();\n        save(result);\n        return result;\n    };\n}\nfunction runWithCleanup(cb, cleanup) {\n    const result = cb();\n    if (result &&\n        typeof result === \"object\" &&\n        \"then\" in result &&\n        typeof result.then === \"function\") {\n        return result.then((value) => {\n            // cleanup\n            cleanup(result);\n            return value;\n        });\n    }\n    cleanup(result);\n    return result;\n}\nexport const Context = {\n    create,\n    memo,\n};\n", "import { create } from \"./context2.js\";\nconst RequestContext = create(\"RequestContext\");\nexport function useContextType() {\n    const ctx = RequestContext.use();\n    return ctx.type;\n}\nexport function useEvent(type) {\n    const ctx = RequestContext.use();\n    if (ctx.type !== type)\n        throw new Error(`Expected ${type} event`);\n    return ctx.event;\n}\nexport function useLambdaContext() {\n    const ctx = RequestContext.use();\n    return ctx.context;\n}\nexport function Handler(type, cb) {\n    return function handler(event, context) {\n        return RequestContext.with({ type, event: event, context }, () => cb(event, context));\n    };\n}\n", "import { createProxy } from \"../util/index.js\";\nimport { useEvent, Handler, useContextType, } from \"../../context/handler.js\";\nimport { memo } from \"../../context/context2.js\";\nexport const Api = /* @__PURE__ */ createProxy(\"Api\");\nexport const AppSyncApi = \n/* @__PURE__ */ createProxy(\"AppSyncApi\");\nexport const ApiGatewayV1Api = \n/* @__PURE__ */ createProxy(\"ApiGatewayV1Api\");\nexport class Response {\n    result;\n    constructor(result) {\n        this.result = result;\n    }\n}\n/**\n * Create a new api handler that can be used to create an authenticated session.\n *\n * @example\n * ```ts\n * export const handler = ApiHandler({\n * })\n * ```\n */\nexport function ApiHandler(cb) {\n    return Handler(\"api\", async (evt, ctx) => {\n        let result;\n        try {\n            result = await cb(evt, ctx);\n        }\n        catch (e) {\n            if (e instanceof Response) {\n                result = e.result;\n            }\n            else\n                throw e;\n        }\n        const serialized = useResponse().serialize(result || {});\n        return serialized;\n    });\n}\nexport const useCookies = /* @__PURE__ */ memo(() => {\n    const evt = useEvent(\"api\");\n    const cookies = evt.cookies || [];\n    return Object.fromEntries(cookies.map((c) => c.split(\"=\")).map(([k, v]) => [k, decodeURIComponent(v)]));\n});\nexport function useCookie(name) {\n    const cookies = useCookies();\n    return cookies[name];\n}\nexport const useBody = /* @__PURE__ */ memo(() => {\n    const type = useContextType();\n    const evt = useEvent(type);\n    if (!evt.body)\n        return;\n    const body = evt.isBase64Encoded\n        ? Buffer.from(evt.body, \"base64\").toString()\n        : evt.body;\n    return body;\n});\nexport const useJsonBody = /* @__PURE__ */ memo(() => {\n    const body = useBody();\n    if (!body)\n        return;\n    return JSON.parse(body);\n});\nexport const useFormData = /* @__PURE__ */ memo(() => {\n    const body = useBody();\n    if (!body)\n        return;\n    const params = new URLSearchParams(body);\n    return params;\n});\nexport const usePath = /* @__PURE__ */ memo(() => {\n    const evt = useEvent(\"api\");\n    return evt.rawPath.split(\"/\").filter(Boolean);\n});\nexport const useResponse = /* @__PURE__ */ memo(() => {\n    useEvent(\"api\");\n    const response = {\n        headers: {},\n        cookies: [],\n    };\n    const result = {\n        cookies(values, options) {\n            for (const [key, value] of Object.entries(values)) {\n                result.cookie({\n                    key,\n                    value,\n                    ...options,\n                });\n            }\n            return result;\n        },\n        cookie(input) {\n            input = {\n                secure: true,\n                sameSite: \"None\",\n                httpOnly: true,\n                ...input,\n            };\n            const value = encodeURIComponent(input.value);\n            const parts = [input.key + \"=\" + value];\n            if (input.domain)\n                parts.push(\"Domain=\" + input.domain);\n            if (input.path)\n                parts.push(\"Path=\" + input.path);\n            if (input.expires)\n                parts.push(\"Expires=\" + input.expires.toUTCString());\n            if (input.maxAge)\n                parts.push(\"Max-Age=\" + input.maxAge);\n            if (input.httpOnly)\n                parts.push(\"HttpOnly\");\n            if (input.secure)\n                parts.push(\"Secure\");\n            if (input.sameSite)\n                parts.push(\"SameSite=\" + input.sameSite);\n            response.cookies.push(parts.join(\"; \"));\n            return result;\n        },\n        status(code) {\n            response.statusCode = code;\n            return result;\n        },\n        header(key, value) {\n            response.headers[key] = value;\n            return result;\n        },\n        serialize(input) {\n            return {\n                ...response,\n                ...input,\n                cookies: [...(input.cookies || []), ...response.cookies],\n                headers: {\n                    ...response.headers,\n                    ...input.headers,\n                },\n            };\n        },\n    };\n    return result;\n});\nexport function useDomainName() {\n    const type = useContextType();\n    const evt = useEvent(type);\n    return evt.requestContext.domainName;\n}\nexport function useMethod() {\n    const evt = useEvent(\"api\");\n    return evt.requestContext.http.method;\n}\nexport function useHeaders() {\n    const type = useContextType();\n    const evt = useEvent(type);\n    return evt.headers || {};\n}\nexport function useHeader(key) {\n    const headers = useHeaders();\n    return headers[key];\n}\nexport function useFormValue(name) {\n    const params = useFormData();\n    return params?.get(name);\n}\nexport function useQueryParams() {\n    const type = useContextType();\n    const evt = useEvent(type);\n    const query = evt.queryStringParameters || {};\n    return query;\n}\nexport function useQueryParam(name) {\n    return useQueryParams()[name];\n}\nexport function usePathParams() {\n    const evt = useEvent(\"api\");\n    const path = evt.pathParameters || {};\n    return path;\n}\nexport function usePathParam(name) {\n    return usePathParams()[name];\n}\n", "import { ApiHandler } from \"sst/node/api\";\n\nexport const handler = ApiHandler(async (_evt) => {\n  return {\n    statusCode: 200,\n    body: `Hello world. The time is ${new Date().toISOString()}`,\n  };\n});\n"],
  "mappings": ";;;;;;;;;AAAA,SAAS,yBAAyB;AAC3B,IAAM,uBAAN,cAAmC,MAAM;AAAA,EADhD,OACgD;AAAA;AAAA;AAAA,EAC5C;AAAA,EACA,YAAY,MAAM;AACd,UAAM,GAAG,IAAI,wFAAwF;AACrG,SAAK,OAAO;AAAA,EAChB;AACJ;AACA,IAAI,QAAQ;AACL,SAAS,OAAO,MAAM;AACzB,QAAM,UAAU,IAAI,kBAAkB;AACtC,QAAM,WAAW,CAAC;AAElB,WAAS,QAAQ;AACb,eAAW,SAAS,UAAU;AAC1B,YAAM;AAAA,IACV;AAAA,EACJ;AAJS;AAKT,QAAM,MAAM;AAAA,IACR;AAAA,IACA,KAAK,OAAO,IAAI;AACZ,YAAM,WAAW,EAAE,OAAO,SAAS;AACnC,aAAO,QAAQ,IAAI,EAAE,OAAO,QAAQ,GAAG,MAAM;AACzC,eAAO,eAAe,IAAI,MAAM,MAAM,CAAC;AAAA,MAC3C,CAAC;AAAA,IACL;AAAA,IACA,MAAM;AACF,YAAMA,QAAO,YAAY,SAAS;AAElC,UAAIA,OAAM;AACN,QAAAA,MAAK,KAAK,KAAK,GAAG;AAClB,iBAAS,KAAKA,MAAK,KAAK;AAAA,MAC5B;AACA,YAAM,SAAS,QAAQ,SAAS;AAChC,UAAI,WAAW;AACX,cAAM,IAAI,qBAAqB,IAAI;AACvC,aAAO,OAAO;AAAA,IAClB;AAAA,IACA,UAAU;AACN,YAAM,SAAS,QAAQ,SAAS;AAChC,UAAI,WAAW;AACX,cAAM,IAAI,qBAAqB,IAAI;AACvC,aAAO,OAAO;AAAA,IAClB;AAAA,EACJ;AACA,SAAO;AACX;AArCgB;AAsChB,IAAM,cAAc,IAAI,kBAAkB;AACnC,SAAS,KAAK,IAAI;AACrB,QAAM,OAAO,CAAC;AACd,QAAM,QAAQ,oBAAI,IAAI;AACtB,QAAM,WAAW,CAAC;AAClB,MAAI,UAAU;AACd,WAAS,MAAM;AACX,WAAO,KAAK,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,KAAK,GAAG;AAAA,EACpD;AAFS;AAGT,WAAS,QAAQ;AACb,UAAM,OAAO,IAAI,CAAC;AAClB,eAAW,SAAS,UAAU;AAC1B,YAAM;AAAA,IACV;AAAA,EACJ;AALS;AAMT,WAAS,KAAK,OAAO;AACjB,UAAM,IAAI,IAAI,GAAG,KAAK;AAAA,EAC1B;AAFS;AAGT,SAAO,MAAM;AACT,UAAM,QAAQ,YAAY,SAAS;AACnC,QAAI,OAAO;AACP,YAAM,KAAK,KAAK,EAAE,SAAS,MAAM,IAAI,EAAE,CAAC;AACxC,eAAS,KAAK,MAAM,KAAK;AAAA,IAC7B;AAEA,QAAI,CAAC,SAAS;AACV,aAAO,YAAY,IAAI,EAAE,MAAM,MAAM,GAAG,MAAM;AAC1C,eAAO,eAAe,IAAI,CAACC,YAAW;AAClC,oBAAU;AACV,eAAKA,OAAM;AAAA,QACf,CAAC;AAAA,MACL,CAAC;AAAA,IACL;AACA,UAAM,SAAS,MAAM,IAAI,IAAI,CAAC;AAC9B,QAAI,QAAQ;AACR,aAAO;AAAA,IACX;AACA,UAAM,SAAS,GAAG;AAClB,SAAK,MAAM;AACX,WAAO;AAAA,EACX;AACJ;AAxCgB;AAyChB,SAAS,eAAe,IAAI,SAAS;AACjC,QAAM,SAAS,GAAG;AAClB,MAAI,UACA,OAAO,WAAW,YAClB,UAAU,UACV,OAAO,OAAO,SAAS,YAAY;AACnC,WAAO,OAAO,KAAK,CAAC,UAAU;AAE1B,cAAQ,MAAM;AACd,aAAO;AAAA,IACX,CAAC;AAAA,EACL;AACA,UAAQ,MAAM;AACd,SAAO;AACX;AAdS;;;ACxFT,IAAM,iBAAiB,OAAO,gBAAgB;AAKvC,SAAS,SAAS,MAAM;AAC3B,QAAM,MAAM,eAAe,IAAI;AAC/B,MAAI,IAAI,SAAS;AACb,UAAM,IAAI,MAAM,YAAY,IAAI,QAAQ;AAC5C,SAAO,IAAI;AACf;AALgB;AAUT,SAAS,QAAQ,MAAM,IAAI;AAC9B,SAAO,gCAASC,SAAQ,OAAO,SAAS;AACpC,WAAO,eAAe,KAAK,EAAE,MAAM,OAAc,QAAQ,GAAG,MAAM,GAAG,OAAO,OAAO,CAAC;AAAA,EACxF,GAFO;AAGX;AAJgB;;;ACRT,IAAM,WAAN,MAAe;AAAA,EARtB,OAQsB;AAAA;AAAA;AAAA,EAClB;AAAA,EACA,YAAY,QAAQ;AAChB,SAAK,SAAS;AAAA,EAClB;AACJ;AAUO,SAAS,WAAW,IAAI;AAC3B,SAAO,QAAQ,OAAO,OAAO,KAAK,QAAQ;AACtC,QAAI;AACJ,QAAI;AACA,eAAS,MAAM,GAAG,KAAK,GAAG;AAAA,IAC9B,SACO,GAAG;AACN,UAAI,aAAa,UAAU;AACvB,iBAAS,EAAE;AAAA,MACf;AAEI,cAAM;AAAA,IACd;AACA,UAAM,aAAa,YAAY,EAAE,UAAU,UAAU,CAAC,CAAC;AACvD,WAAO;AAAA,EACX,CAAC;AACL;AAhBgB;AAqDT,IAAM,cAA8B,qBAAK,MAAM;AAClD,WAAS,KAAK;AACd,QAAM,WAAW;AAAA,IACb,SAAS,CAAC;AAAA,IACV,SAAS,CAAC;AAAA,EACd;AACA,QAAM,SAAS;AAAA,IACX,QAAQ,QAAQ,SAAS;AACrB,iBAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,GAAG;AAC/C,eAAO,OAAO;AAAA,UACV;AAAA,UACA;AAAA,UACA,GAAG;AAAA,QACP,CAAC;AAAA,MACL;AACA,aAAO;AAAA,IACX;AAAA,IACA,OAAO,OAAO;AACV,cAAQ;AAAA,QACJ,QAAQ;AAAA,QACR,UAAU;AAAA,QACV,UAAU;AAAA,QACV,GAAG;AAAA,MACP;AACA,YAAM,QAAQ,mBAAmB,MAAM,KAAK;AAC5C,YAAM,QAAQ,CAAC,MAAM,MAAM,MAAM,KAAK;AACtC,UAAI,MAAM;AACN,cAAM,KAAK,YAAY,MAAM,MAAM;AACvC,UAAI,MAAM;AACN,cAAM,KAAK,UAAU,MAAM,IAAI;AACnC,UAAI,MAAM;AACN,cAAM,KAAK,aAAa,MAAM,QAAQ,YAAY,CAAC;AACvD,UAAI,MAAM;AACN,cAAM,KAAK,aAAa,MAAM,MAAM;AACxC,UAAI,MAAM;AACN,cAAM,KAAK,UAAU;AACzB,UAAI,MAAM;AACN,cAAM,KAAK,QAAQ;AACvB,UAAI,MAAM;AACN,cAAM,KAAK,cAAc,MAAM,QAAQ;AAC3C,eAAS,QAAQ,KAAK,MAAM,KAAK,IAAI,CAAC;AACtC,aAAO;AAAA,IACX;AAAA,IACA,OAAO,MAAM;AACT,eAAS,aAAa;AACtB,aAAO;AAAA,IACX;AAAA,IACA,OAAO,KAAK,OAAO;AACf,eAAS,QAAQ,GAAG,IAAI;AACxB,aAAO;AAAA,IACX;AAAA,IACA,UAAU,OAAO;AACb,aAAO;AAAA,QACH,GAAG;AAAA,QACH,GAAG;AAAA,QACH,SAAS,CAAC,GAAI,MAAM,WAAW,CAAC,GAAI,GAAG,SAAS,OAAO;AAAA,QACvD,SAAS;AAAA,UACL,GAAG,SAAS;AAAA,UACZ,GAAG,MAAM;AAAA,QACb;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACA,SAAO;AACX,CAAC;;;AC1IM,IAAM,UAAU,WAAW,OAAO,SAAS;AAChD,SAAO;AAAA,IACL,YAAY;AAAA,IACZ,MAAM,6BAA4B,oBAAI,KAAK,GAAE,YAAY,CAAC;AAAA,EAC5D;AACF,CAAC;",
  "names": ["memo", "result", "handler"]
}
